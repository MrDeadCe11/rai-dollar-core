// SPDX-License-Identifier: MIT

pragma solidity 0.8.24;

import {PriceFeedBase} from "./PriceFeedBase.sol";
import {Constants as C} from "./Common/Constants.sol";
import {LiquityMath} from "./Common/LiquityMath.sol";

//import parsers here

///@notice this is a template for a new price feed
contract TemplatePriceFeed is PriceFeedBase {
    
    constructor(address _primaryOracle, address _fallbackOracle, address _token) PriceFeedBase(_primaryOracle, _fallbackOracle, _token) {}

    /// @notice must override the following function with oracle / collateral specific logic

    // --- Oracle Overrides ---
    
    // external function that fetches the price from the primary or fallback oracle
    function fetchPrice(bool _isRedemption) external override returns (uint256 price, bool success);

    // primary oracle response
    function _fetchPriceFromPrimaryOracle() internal override returns (Response memory);

    // fallback oracle response
    function _fetchPriceFromFallbackOracle() internal override returns (Response memory);
    
}